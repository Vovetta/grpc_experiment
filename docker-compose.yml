name: grpc-test

networks:
  bridge-network:
    driver: bridge

services:
  python-grpc:
    build:
      dockerfile: Dockerfile-python-server
    container_name: python-server
    environment:
      - PYTHON_SERVER_PORT=${PYTHON_SERVER_PORT}
      - PYTHON_SERVER_METRICS_PORT=${PYTHON_SERVER_METRICS_PORT}
      - PYTHONUNBUFFERED=1
    ports:
      - ${PYTHON_SERVER_PORT}:${PYTHON_SERVER_PORT}
      - ${PYTHON_SERVER_METRICS_PORT}:${PYTHON_SERVER_METRICS_PORT}
    networks:
      - bridge-network

  node-grpc:
    build:
      dockerfile: Dockerfile-node-server
    container_name: node-server
    environment:
      - NODE_SERVER_PORT=${NODE_SERVER_PORT}
      - NODE_SERVER_METRICS_PORT=${NODE_SERVER_METRICS_PORT}
    ports:
      - ${NODE_SERVER_PORT}:${NODE_SERVER_PORT}
      - ${NODE_SERVER_METRICS_PORT}:${NODE_SERVER_METRICS_PORT}
    networks:
      - bridge-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - prometheus
    volumes:
      - ./grafana_data:/var/lib/grafana
      - ./grafana_source.yml:/etc/grafana/provisioning/datasources/grafana_source.yml
    user: "472"
    ports:
      - ${GRAFANA_PORT}:${GRAFANA_PORT}
    networks:
      - bridge-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention=200h'
      - '--web.enable-lifecycle'
    # restart: unless-stopped
    ports:
      - ${PROMETHEUS_PORT}:${PROMETHEUS_PORT}
    networks:
      - bridge-network